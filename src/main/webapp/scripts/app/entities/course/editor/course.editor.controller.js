/// <reference path="../../../../../typings/tsd.d.ts" />
/// <reference path="../../../commons/subscriptions.service.ts" />
/// <reference path="../../teacher/teacher.service.ts" />
var AngularTest;
(function (AngularTest) {
    var Course;
    (function (Course) {
        'use strict';
        var CourseEditorController = (function () {
            function CourseEditorController(CourseService, StreamsService, $stateParams, TeacherService) {
                var _this = this;
                this.CourseService = CourseService;
                this.StreamsService = StreamsService;
                this.TeacherService = TeacherService;
                this.loadTeachers();
                if ($stateParams['id']) {
                    CourseService.get({ id: $stateParams['id'] });
                    this.courseStream = StreamsService.getStream('/api/course/' + $stateParams['id']);
                    this.courseStream.subscribe(function (notification) {
                        _this.course = notification.data;
                    });
                }
                this.formFields = [
                    {
                        'templateOptions': {
                            'type': 'text',
                            'label': 'Name'
                        },
                        'type': 'input',
                        'key': 'name'
                    },
                    {
                        'type': 'select',
                        'key': 'teacher',
                        'templateOptions': {
                            'label': 'Teacher',
                            'displayKey': 'firstName',
                            'selectProperty': 'id',
                            'collection': this.teachersList
                        }
                    }
                ];
            }
            CourseEditorController.prototype.loadTeachers = function () {
                var _this = this;
                this.TeacherService.query({ page: 0, size: 20 });
                this.teacherStream = this.StreamsService.getStream('/api/teacher');
                this.teachersList = [];
                this.teacherStream.subscribe(function (notification) {
                    _this.teachersList = notification.data;
                });
            };
            CourseEditorController.prototype.save = function () {
                if (this.course.id) {
                    this.CourseService.update(this.course);
                }
                else {
                    this.CourseService.save({
                        'name': this.course.name
                    });
                }
            };
            CourseEditorController.$inject = ['CourseService', 'StreamsService', '$stateParams', 'TeacherService'];
            return CourseEditorController;
        })();
        Course.CourseEditorController = CourseEditorController;
        angular.module('angularTest.course').controller('CourseEditorController', CourseEditorController);
    })(Course = AngularTest.Course || (AngularTest.Course = {}));
})(AngularTest || (AngularTest = {}));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudGl0aWVzL2NvdXJzZS9lZGl0b3IvY291cnNlLmVkaXRvci5jb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbIkFuZ3VsYXJUZXN0IiwiQW5ndWxhclRlc3QuQ291cnNlIiwiQW5ndWxhclRlc3QuQ291cnNlLkNvdXJzZUVkaXRvckNvbnRyb2xsZXIiLCJBbmd1bGFyVGVzdC5Db3Vyc2UuQ291cnNlRWRpdG9yQ29udHJvbGxlci5jb25zdHJ1Y3RvciIsIkFuZ3VsYXJUZXN0LkNvdXJzZS5Db3Vyc2VFZGl0b3JDb250cm9sbGVyLmxvYWRUZWFjaGVycyIsIkFuZ3VsYXJUZXN0LkNvdXJzZS5Db3Vyc2VFZGl0b3JDb250cm9sbGVyLnNhdmUiXSwibWFwcGluZ3MiOiJBQUFBLHdEQUF3RDtBQUN4RCxrRUFBa0U7QUFDbEUseURBQXlEO0FBRXpELElBQU8sV0FBVyxDQTZFakI7QUE3RUQsV0FBTyxXQUFXO0lBQUNBLElBQUFBLE1BQU1BLENBNkV4QkE7SUE3RWtCQSxXQUFBQSxNQUFNQSxFQUFDQSxDQUFDQTtRQUN2QkMsWUFBWUEsQ0FBQ0E7UUFFYkEsSUFBYUEsc0JBQXNCQTtZQXdCL0JDLFNBeEJTQSxzQkFBc0JBLENBd0JaQSxhQUFhQSxFQUFVQSxjQUE4QkEsRUFDcEVBLFlBQXVDQSxFQUFVQSxjQUFjQTtnQkF6QnZFQyxpQkFzRUNBO2dCQTlDc0JBLGtCQUFhQSxHQUFiQSxhQUFhQSxDQUFBQTtnQkFBVUEsbUJBQWNBLEdBQWRBLGNBQWNBLENBQWdCQTtnQkFDbkJBLG1CQUFjQSxHQUFkQSxjQUFjQSxDQUFBQTtnQkFFL0RBLElBQUlBLENBQUNBLFlBQVlBLEVBQUVBLENBQUNBO2dCQUVwQkEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsWUFBWUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7b0JBQ3JCQSxhQUFhQSxDQUFDQSxHQUFHQSxDQUFDQSxFQUFFQSxFQUFFQSxFQUFFQSxZQUFZQSxDQUFDQSxJQUFJQSxDQUFDQSxFQUFFQSxDQUFDQSxD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ImZpbGUiOiJlbnRpdGllcy9jb3Vyc2UvZWRpdG9yL2NvdXJzZS5lZGl0b3IuY29udHJvbGxlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuLi8uLi8uLi8uLi8uLi90eXBpbmdzL3RzZC5kLnRzXCIgLz5cbi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuLi8uLi8uLi9jb21tb25zL3N1YnNjcmlwdGlvbnMuc2VydmljZS50c1wiIC8+XG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi4vLi4vdGVhY2hlci90ZWFjaGVyLnNlcnZpY2UudHNcIiAvPlxuXG5tb2R1bGUgQW5ndWxhclRlc3QuQ291cnNlIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICBleHBvcnQgY2xhc3MgQ291cnNlRWRpdG9yQ29udHJvbGxlciB7XG5cbiAgICAgICAgc3RhdGljICRpbmplY3Q6IEFycmF5PHN0cmluZz4gPSBcbiAgICAgICAgICAgIFsnQ291cnNlU2VydmljZScsICdTdHJlYW1zU2VydmljZScsICckc3RhdGVQYXJhbXMnICwgJ1RlYWNoZXJTZXJ2aWNlJ107XG4gICAgXG4gICAgICAgIHB1YmxpYyBjb3Vyc2U7XG5cbiAgICAgICAgcHVibGljIGZvcm1GaWVsZHM7XG4gICAgXG4gICAgICAgIHB1YmxpYyBjb3Vyc2VTdHJlYW07XG5cbiAgICAgICAgcHJpdmF0ZSB0ZWFjaGVyU3RyZWFtO1xuXG4gICAgICAgIHByaXZhdGUgdGVhY2hlcnNMaXN0OiBBcnJheTxhbnk+O1xuXG4gICAgICAgIHByaXZhdGUgbG9hZFRlYWNoZXJzICgpIHtcbiAgICAgICAgICAgIHRoaXMuVGVhY2hlclNlcnZpY2UucXVlcnkoeyBwYWdlOiAwICwgc2l6ZTogMjAgfSk7XG4gICAgICAgICAgICB0aGlzLnRlYWNoZXJTdHJlYW0gPSB0aGlzLlN0cmVhbXNTZXJ2aWNlLmdldFN0cmVhbSgnL2FwaS90ZWFjaGVyJyk7XG4gICAgICAgICAgICB0aGlzLnRlYWNoZXJzTGlzdCA9IFtdO1xuICAgICAgICAgICAgdGhpcy50ZWFjaGVyU3RyZWFtLnN1YnNjcmliZSgobm90aWZpY2F0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy50ZWFjaGVyc0xpc3QgPSBub3RpZmljYXRpb24uZGF0YTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBDb3Vyc2VTZXJ2aWNlLCBwcml2YXRlIFN0cmVhbXNTZXJ2aWNlOiBTdHJlYW1zU2VydmljZSxcbiAgICAgICAgICAgICRzdGF0ZVBhcmFtczogbmcudWkuSVN0YXRlUGFyYW1zU2VydmljZSwgcHJpdmF0ZSBUZWFjaGVyU2VydmljZSkge1xuXG4gICAgICAgICAgICB0aGlzLmxvYWRUZWFjaGVycygpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoJHN0YXRlUGFyYW1zWydpZCddKSB7XG4gICAgICAgICAgICAgICAgQ291cnNlU2VydmljZS5nZXQoeyBpZDogJHN0YXRlUGFyYW1zWydpZCddIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMuY291cnNlU3RyZWFtID0gXG4gICAgICAgICAgICAgICAgICAgIFN0cmVhbXNTZXJ2aWNlLmdldFN0cmVhbSgnL2FwaS9jb3Vyc2UvJyArICRzdGF0ZVBhcmFtc1snaWQnXSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jb3Vyc2VTdHJlYW0uc3Vic2NyaWJlKChub3RpZmljYXRpb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb3Vyc2UgPSBub3RpZmljYXRpb24uZGF0YTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdGhpcy5mb3JtRmllbGRzID0gW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgJ3RlbXBsYXRlT3B0aW9ucyc6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICd0eXBlJzogJ3RleHQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJzogJ05hbWUnXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICd0eXBlJzogJ2lucHV0JyxcbiAgICAgICAgICAgICAgICAgICAgJ2tleSc6ICduYW1lJ1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAndHlwZSc6ICdzZWxlY3QnLFxuICAgICAgICAgICAgICAgICAgICAna2V5JzogJ3RlYWNoZXInLFxuICAgICAgICAgICAgICAgICAgICAndGVtcGxhdGVPcHRpb25zJzoge1xuICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJzogJ1RlYWNoZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2Rpc3BsYXlLZXknOiAnZmlyc3ROYW1lJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdzZWxlY3RQcm9wZXJ0eSc6ICdpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAnY29sbGVjdGlvbic6IHRoaXMudGVhY2hlcnNMaXN0XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gIFxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICBzYXZlKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuY291cnNlLmlkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5Db3Vyc2VTZXJ2aWNlLnVwZGF0ZSh0aGlzLmNvdXJzZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuQ291cnNlU2VydmljZS5zYXZlKHtcbiAgICAgICAgICAgICAgICAgICAgJ25hbWUnOiB0aGlzLmNvdXJzZS5uYW1lXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgYW5ndWxhci5tb2R1bGUoJ2FuZ3VsYXJUZXN0LmNvdXJzZScpXG4gICAgICAgIC5jb250cm9sbGVyKCdDb3Vyc2VFZGl0b3JDb250cm9sbGVyJywgQ291cnNlRWRpdG9yQ29udHJvbGxlcik7XG59Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9