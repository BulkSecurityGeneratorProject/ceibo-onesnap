/// <reference path="../../../../../typings/tsd.d.ts" />
/// <reference path="../../../commons/subscriptions.service.ts" />
var AngularTest;
(function (AngularTest) {
    var Student;
    (function (Student) {
        'use strict';
        var StudentEditorController = (function () {
            function StudentEditorController(StudentService, StreamsService, $stateParams) {
                var _this = this;
                this.StudentService = StudentService;
                this.StreamsService = StreamsService;
                if ($stateParams['id']) {
                    StudentService.get({ id: $stateParams['id'] });
                    this.studentStream = StreamsService.getStream('/api/student/' + $stateParams['id']);
                    this.studentStream.subscribe(function (notification) {
                        _this.student = notification.data;
                    });
                }
                this.formFields = [
                    {
                        "templateOptions": {
                            "type": "text",
                            "label": "First Name"
                        },
                        "type": "input",
                        "key": "firstName"
                    },
                    {
                        "templateOptions": {
                            "type": "text",
                            "label": "Last Name"
                        },
                        "type": "input",
                        "key": "lastName"
                    }
                ];
            }
            StudentEditorController.prototype.save = function () {
                if (this.student.id) {
                    this.StudentService.update(this.student);
                }
                else {
                    this.StudentService.save({
                        "lastName": this.student.lastName,
                        "firstName": this.student.firstName
                    });
                }
            };
            StudentEditorController.$inject = ['StudentService', 'StreamsService', '$stateParams'];
            return StudentEditorController;
        })();
        Student.StudentEditorController = StudentEditorController;
        angular.module('angularTest.student').controller('StudentEditorController', StudentEditorController);
    })(Student = AngularTest.Student || (AngularTest.Student = {}));
})(AngularTest || (AngularTest = {}));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudGl0aWVzL3N0dWRlbnQvZWRpdG9yL3N0dWRlbnQuZWRpdG9yLmNvbnRyb2xsZXIudHMiXSwibmFtZXMiOlsiQW5ndWxhclRlc3QiLCJBbmd1bGFyVGVzdC5TdHVkZW50IiwiQW5ndWxhclRlc3QuU3R1ZGVudC5TdHVkZW50RWRpdG9yQ29udHJvbGxlciIsIkFuZ3VsYXJUZXN0LlN0dWRlbnQuU3R1ZGVudEVkaXRvckNvbnRyb2xsZXIuY29uc3RydWN0b3IiLCJBbmd1bGFyVGVzdC5TdHVkZW50LlN0dWRlbnRFZGl0b3JDb250cm9sbGVyLnNhdmUiXSwibWFwcGluZ3MiOiJBQUFBLHdEQUF3RDtBQUN4RCxrRUFBa0U7QUFFbEUsSUFBTyxXQUFXLENBd0RqQjtBQXhERCxXQUFPLFdBQVc7SUFBQ0EsSUFBQUEsT0FBT0EsQ0F3RHpCQTtJQXhEa0JBLFdBQUFBLE9BQU9BLEVBQUNBLENBQUNBO1FBQ3hCQyxZQUFZQSxDQUFDQTtRQUViQSxJQUFhQSx1QkFBdUJBO1lBVWhDQyxTQVZTQSx1QkFBdUJBLENBVWJBLGNBQWNBLEVBQVVBLGNBQThCQSxFQUFFQSxZQUF1Q0E7Z0JBVnRIQyxpQkFpRENBO2dCQXZDc0JBLG1CQUFjQSxHQUFkQSxjQUFjQSxDQUFBQTtnQkFBVUEsbUJBQWNBLEdBQWRBLGNBQWNBLENBQWdCQTtnQkFDckVBLEVBQUVBLENBQUNBLENBQUNBLFlBQVlBLENBQUNBLElBQUlBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO29CQUNyQkEsY0FBY0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsRUFBRUEsRUFBRUEsRUFBRUEsWUFBWUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0E7b0JBQy9DQSxJQUFJQSxDQUFDQSxhQUFhQSxHQUFHQSxjQUFjQSxDQUFDQSxTQUFTQSxDQUFDQSxlQUFlQSxHQUFHQSxZQUFZQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQTtvQkFDcEZBLElBQUlBLENBQUNBLGFBQWFBLENBQUNBLFNBQVNBLENBQUNBLFVBQUNBLFlBQVlBO3dCQUN0Q0EsS0FBSUEsQ0FBQ0EsT0FBT0EsR0FBR0EsWUFBWUEsQ0FBQ0EsSUFBSUEsQ0FBQ0E7b0JBQ3JDQSxDQUFDQSxDQUFDQSxDQUFDQTtnQkFDUEEsQ0FBQ0E7Z0JBRURBLElBQUlBLENBQUNBLFVBQVVBLEdBQUdBO29CQUNkQTt3QkFDSUEsaUJBQWlCQSxFQUFFQTs0QkFDZkEsTUFBTUEsRUFBRUEsTUFBTUE7NEJBQ2RBLE9BQU9BLEVBQUVBLFlBQVlBO3lCQUN4QkE7d0JBQ0RBLE1BQU1BLEVBQUVBLE9BQU9BO3dCQUNmQSxLQUFLQSxFQUFFQSxXQUFXQTtxQkFDckJBO29CQUNEQTt3QkFDSUEsaUJBQWlCQSxFQUFFQTs0QkFDZkEsTUFBTUEsRUFBRUEsTUFBTUE7NEJBQ2RBLE9BQU9BLEVBQUVBLFdBQVdBO3lCQUN2QkE7d0JBQ0RBLE1BQU1BLEVBQUVBLE9BQU9BO3dCQUNmQSxLQUFLQSxFQUFFQSxVQUFVQTtxQkFDcEJBO2lCQUNKQSxDQUFBQTtZQUNMQSxDQUFDQTtZQUVERCxzQ0FBSUEsR0FBSkE7Z0JBQ0lFLEVBQUVBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLE9BQU9BLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBO29CQUNsQkEsSUFBSUEsQ0FBQ0EsY0FBY0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsQ0FBQ0E7Z0JBQzdDQSxDQUFDQTtnQkFBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7b0JBQ0pBLElBQUlBLENBQUNBLGNBQWNBLENBQUNBLElBQUlBLENBQUNBO3dCQUNyQkEsVUFBVUEsRUFBRUEsSUFBSUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsUUFBUUE7d0JBQ2pDQSxXQUFXQSxFQUFFQSxJQUFJQSxDQUFDQSxPQUFPQSxDQUFDQSxTQUFTQTtxQkFDdENBLENBQUNBLENBQUFBO2dCQUNOQSxDQUFDQTtZQUNMQSxDQUFDQTtZQTlDTUYsK0JBQU9BLEdBQWtCQSxDQUFDQSxnQkFBZ0JBLEVBQUVBLGdCQUFnQkEsRUFBRUEsY0FBY0EsQ0FBQ0EsQ0FBQ0E7WUErQ3pGQSw4QkFBQ0E7UUFBREEsQ0FqREFELEFBaURDQyxJQUFBRDtRQWpEWUEsK0JBQXVCQSxHQUF2QkEsdUJBaURaQSxDQUFBQTtRQUVEQSxPQUFPQSxDQUFDQSxNQUFNQSxDQUFDQSxxQkFBcUJBLENBQUNBLENBQ2hDQSxVQUFVQSxDQUFDQSx5QkFBeUJBLEVBQUVBLHVCQUF1QkEsQ0FBQ0EsQ0FBQ0E7SUFDeEVBLENBQUNBLEVBeERrQkQsT0FBT0EsR0FBUEEsbUJBQU9BLEtBQVBBLG1CQUFPQSxRQXdEekJBO0FBQURBLENBQUNBLEVBeERNLFdBQVcsS0FBWCxXQUFXLFFBd0RqQiIsImZpbGUiOiJlbnRpdGllcy9zdHVkZW50L2VkaXRvci9zdHVkZW50LmVkaXRvci5jb250cm9sbGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4uLy4uLy4uLy4uLy4uL3R5cGluZ3MvdHNkLmQudHNcIiAvPlxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4uLy4uLy4uL2NvbW1vbnMvc3Vic2NyaXB0aW9ucy5zZXJ2aWNlLnRzXCIgLz5cblxubW9kdWxlIEFuZ3VsYXJUZXN0LlN0dWRlbnQge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIGV4cG9ydCBjbGFzcyBTdHVkZW50RWRpdG9yQ29udHJvbGxlciB7XG4gICAgXG4gICAgICAgIHN0YXRpYyAkaW5qZWN0OiBBcnJheTxzdHJpbmc+ID0gWydTdHVkZW50U2VydmljZScsICdTdHJlYW1zU2VydmljZScsICckc3RhdGVQYXJhbXMnXTtcbiAgICBcbiAgICAgICAgcHVibGljIGZvcm1GaWVsZHM7XG4gICAgXG4gICAgICAgIHB1YmxpYyBzdHVkZW50U3RyZWFtO1xuICAgIFxuICAgICAgICBwdWJsaWMgc3R1ZGVudDtcbiAgICBcbiAgICAgICAgY29uc3RydWN0b3IocHVibGljIFN0dWRlbnRTZXJ2aWNlLCBwcml2YXRlIFN0cmVhbXNTZXJ2aWNlOiBTdHJlYW1zU2VydmljZSwgJHN0YXRlUGFyYW1zOiBuZy51aS5JU3RhdGVQYXJhbXNTZXJ2aWNlKSB7XG4gICAgICAgICAgICBpZiAoJHN0YXRlUGFyYW1zWydpZCddKSB7XG4gICAgICAgICAgICAgICAgU3R1ZGVudFNlcnZpY2UuZ2V0KHsgaWQ6ICRzdGF0ZVBhcmFtc1snaWQnXSB9KTtcbiAgICAgICAgICAgICAgICB0aGlzLnN0dWRlbnRTdHJlYW0gPSBTdHJlYW1zU2VydmljZS5nZXRTdHJlYW0oJy9hcGkvc3R1ZGVudC8nICsgJHN0YXRlUGFyYW1zWydpZCddKTtcbiAgICAgICAgICAgICAgICB0aGlzLnN0dWRlbnRTdHJlYW0uc3Vic2NyaWJlKChub3RpZmljYXRpb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdHVkZW50ID0gbm90aWZpY2F0aW9uLmRhdGE7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHRoaXMuZm9ybUZpZWxkcyA9IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIFwidGVtcGxhdGVPcHRpb25zXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwidHlwZVwiOiBcInRleHRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwibGFiZWxcIjogXCJGaXJzdCBOYW1lXCJcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJ0eXBlXCI6IFwiaW5wdXRcIixcbiAgICAgICAgICAgICAgICAgICAgXCJrZXlcIjogXCJmaXJzdE5hbWVcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBcInRlbXBsYXRlT3B0aW9uc1wiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcInR5cGVcIjogXCJ0ZXh0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImxhYmVsXCI6IFwiTGFzdCBOYW1lXCJcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJ0eXBlXCI6IFwiaW5wdXRcIixcbiAgICAgICAgICAgICAgICAgICAgXCJrZXlcIjogXCJsYXN0TmFtZVwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIHNhdmUoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5zdHVkZW50LmlkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5TdHVkZW50U2VydmljZS51cGRhdGUodGhpcy5zdHVkZW50KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5TdHVkZW50U2VydmljZS5zYXZlKHtcbiAgICAgICAgICAgICAgICAgICAgXCJsYXN0TmFtZVwiOiB0aGlzLnN0dWRlbnQubGFzdE5hbWUsXG4gICAgICAgICAgICAgICAgICAgIFwiZmlyc3ROYW1lXCI6IHRoaXMuc3R1ZGVudC5maXJzdE5hbWVcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIGFuZ3VsYXIubW9kdWxlKCdhbmd1bGFyVGVzdC5zdHVkZW50JylcbiAgICAgICAgLmNvbnRyb2xsZXIoJ1N0dWRlbnRFZGl0b3JDb250cm9sbGVyJywgU3R1ZGVudEVkaXRvckNvbnRyb2xsZXIpO1xufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==