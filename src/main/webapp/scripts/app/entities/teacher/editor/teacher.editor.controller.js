/// <reference path="../../../../../typings/tsd.d.ts" />
/// <reference path="../../../commons/subscriptions.service.ts" />
var AngularTest;
(function (AngularTest) {
    var Teacher;
    (function (Teacher) {
        'use strict';
        var TeacherEditorController = (function () {
            function TeacherEditorController(TeacherService, StreamsService, $stateParams) {
                var _this = this;
                this.TeacherService = TeacherService;
                this.StreamsService = StreamsService;
                if ($stateParams['id']) {
                    TeacherService.get({ id: $stateParams['id'] });
                    this.teacherStream = StreamsService.getStream('/api/teacher/' + $stateParams['id']);
                    this.teacherStream.subscribe(function (notification) {
                        _this.teacher = notification.data;
                    });
                }
                this.formFields = [
                    {
                        "templateOptions": {
                            "type": "text",
                            "label": "First Name"
                        },
                        "type": "input",
                        "key": "firstName"
                    },
                    {
                        "templateOptions": {
                            "type": "text",
                            "label": "Last Name"
                        },
                        "type": "input",
                        "key": "lastName"
                    }
                ];
            }
            TeacherEditorController.prototype.save = function () {
                if (this.teacher.id) {
                    this.TeacherService.update(this.teacher);
                }
                else {
                    this.TeacherService.save({
                        "lastName": this.teacher.lastName,
                        "firstName": this.teacher.firstName
                    });
                }
            };
            TeacherEditorController.$inject = ['TeacherService', 'StreamsService', '$stateParams'];
            return TeacherEditorController;
        })();
        Teacher.TeacherEditorController = TeacherEditorController;
        angular.module('angularTest.teacher').controller('TeacherEditorController', TeacherEditorController);
    })(Teacher = AngularTest.Teacher || (AngularTest.Teacher = {}));
})(AngularTest || (AngularTest = {}));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudGl0aWVzL3RlYWNoZXIvZWRpdG9yL3RlYWNoZXIuZWRpdG9yLmNvbnRyb2xsZXIudHMiXSwibmFtZXMiOlsiQW5ndWxhclRlc3QiLCJBbmd1bGFyVGVzdC5UZWFjaGVyIiwiQW5ndWxhclRlc3QuVGVhY2hlci5UZWFjaGVyRWRpdG9yQ29udHJvbGxlciIsIkFuZ3VsYXJUZXN0LlRlYWNoZXIuVGVhY2hlckVkaXRvckNvbnRyb2xsZXIuY29uc3RydWN0b3IiLCJBbmd1bGFyVGVzdC5UZWFjaGVyLlRlYWNoZXJFZGl0b3JDb250cm9sbGVyLnNhdmUiXSwibWFwcGluZ3MiOiJBQUFBLHdEQUF3RDtBQUN4RCxrRUFBa0U7QUFFbEUsSUFBTyxXQUFXLENBd0RqQjtBQXhERCxXQUFPLFdBQVc7SUFBQ0EsSUFBQUEsT0FBT0EsQ0F3RHpCQTtJQXhEa0JBLFdBQUFBLE9BQU9BLEVBQUNBLENBQUNBO1FBQ3hCQyxZQUFZQSxDQUFDQTtRQUViQSxJQUFhQSx1QkFBdUJBO1lBVWhDQyxTQVZTQSx1QkFBdUJBLENBVWJBLGNBQWNBLEVBQVVBLGNBQThCQSxFQUFFQSxZQUF1Q0E7Z0JBVnRIQyxpQkFpRENBO2dCQXZDc0JBLG1CQUFjQSxHQUFkQSxjQUFjQSxDQUFBQTtnQkFBVUEsbUJBQWNBLEdBQWRBLGNBQWNBLENBQWdCQTtnQkFDckVBLEVBQUVBLENBQUNBLENBQUNBLFlBQVlBLENBQUNBLElBQUlBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO29CQUNyQkEsY0FBY0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsRUFBRUEsRUFBRUEsRUFBRUEsWUFBWUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0E7b0JBQy9DQSxJQUFJQSxDQUFDQSxhQUFhQSxHQUFHQSxjQUFjQSxDQUFDQSxTQUFTQSxDQUFDQSxlQUFlQSxHQUFHQSxZQUFZQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQTtvQkFDcEZBLElBQUlBLENBQUNBLGFBQWFBLENBQUNBLFNBQVNBLENBQUNBLFVBQUNBLFlBQVlBO3dCQUN0Q0EsS0FBSUEsQ0FBQ0EsT0FBT0EsR0FBR0EsWUFBWUEsQ0FBQ0EsSUFBSUEsQ0FBQ0E7b0JBQ3JDQSxDQUFDQSxDQUFDQSxDQUFDQTtnQkFDUEEsQ0FBQ0E7Z0JBRURBLElBQUlBLENBQUNBLFVBQVVBLEdBQUdBO29CQUNkQTt3QkFDSUEsaUJBQWlCQSxFQUFFQTs0QkFDZkEsTUFBTUEsRUFBRUEsTUFBTUE7NEJBQ2RBLE9BQU9BLEVBQUVBLFlBQVlBO3lCQUN4QkE7d0JBQ0RBLE1BQU1BLEVBQUVBLE9BQU9BO3dCQUNmQSxLQUFLQSxFQUFFQSxXQUFXQTtxQkFDckJBO29CQUNEQTt3QkFDSUEsaUJBQWlCQSxFQUFFQTs0QkFDZkEsTUFBTUEsRUFBRUEsTUFBTUE7NEJBQ2RBLE9BQU9BLEVBQUVBLFdBQVdBO3lCQUN2QkE7d0JBQ0RBLE1BQU1BLEVBQUVBLE9BQU9BO3dCQUNmQSxLQUFLQSxFQUFFQSxVQUFVQTtxQkFDcEJBO2lCQUNKQSxDQUFBQTtZQUNMQSxDQUFDQTtZQUVERCxzQ0FBSUEsR0FBSkE7Z0JBQ0lFLEVBQUVBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLE9BQU9BLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBO29CQUNsQkEsSUFBSUEsQ0FBQ0EsY0FBY0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsQ0FBQ0E7Z0JBQzdDQSxDQUFDQTtnQkFBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7b0JBQ0pBLElBQUlBLENBQUNBLGNBQWNBLENBQUNBLElBQUlBLENBQUNBO3dCQUNyQkEsVUFBVUEsRUFBRUEsSUFBSUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsUUFBUUE7d0JBQ2pDQSxXQUFXQSxFQUFFQSxJQUFJQSxDQUFDQSxPQUFPQSxDQUFDQSxTQUFTQTtxQkFDdENBLENBQUNBLENBQUFBO2dCQUNOQSxDQUFDQTtZQUNMQSxDQUFDQTtZQTlDTUYsK0JBQU9BLEdBQWtCQSxDQUFDQSxnQkFBZ0JBLEVBQUVBLGdCQUFnQkEsRUFBRUEsY0FBY0EsQ0FBQ0EsQ0FBQ0E7WUErQ3pGQSw4QkFBQ0E7UUFBREEsQ0FqREFELEFBaURDQyxJQUFBRDtRQWpEWUEsK0JBQXVCQSxHQUF2QkEsdUJBaURaQSxDQUFBQTtRQUVEQSxPQUFPQSxDQUFDQSxNQUFNQSxDQUFDQSxxQkFBcUJBLENBQUNBLENBQ2hDQSxVQUFVQSxDQUFDQSx5QkFBeUJBLEVBQUVBLHVCQUF1QkEsQ0FBQ0EsQ0FBQ0E7SUFDeEVBLENBQUNBLEVBeERrQkQsT0FBT0EsR0FBUEEsbUJBQU9BLEtBQVBBLG1CQUFPQSxRQXdEekJBO0FBQURBLENBQUNBLEVBeERNLFdBQVcsS0FBWCxXQUFXLFFBd0RqQiIsImZpbGUiOiJlbnRpdGllcy90ZWFjaGVyL2VkaXRvci90ZWFjaGVyLmVkaXRvci5jb250cm9sbGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4uLy4uLy4uLy4uLy4uL3R5cGluZ3MvdHNkLmQudHNcIiAvPlxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4uLy4uLy4uL2NvbW1vbnMvc3Vic2NyaXB0aW9ucy5zZXJ2aWNlLnRzXCIgLz5cblxubW9kdWxlIEFuZ3VsYXJUZXN0LlRlYWNoZXIge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIGV4cG9ydCBjbGFzcyBUZWFjaGVyRWRpdG9yQ29udHJvbGxlciB7XG4gICAgXG4gICAgICAgIHN0YXRpYyAkaW5qZWN0OiBBcnJheTxzdHJpbmc+ID0gWydUZWFjaGVyU2VydmljZScsICdTdHJlYW1zU2VydmljZScsICckc3RhdGVQYXJhbXMnXTtcbiAgICBcbiAgICAgICAgcHVibGljIGZvcm1GaWVsZHM7XG4gICAgXG4gICAgICAgIHB1YmxpYyB0ZWFjaGVyO1xuICAgIFxuICAgICAgICBwdWJsaWMgdGVhY2hlclN0cmVhbTtcbiAgICBcbiAgICAgICAgY29uc3RydWN0b3IocHVibGljIFRlYWNoZXJTZXJ2aWNlLCBwcml2YXRlIFN0cmVhbXNTZXJ2aWNlOiBTdHJlYW1zU2VydmljZSwgJHN0YXRlUGFyYW1zOiBuZy51aS5JU3RhdGVQYXJhbXNTZXJ2aWNlKSB7XG4gICAgICAgICAgICBpZiAoJHN0YXRlUGFyYW1zWydpZCddKSB7XG4gICAgICAgICAgICAgICAgVGVhY2hlclNlcnZpY2UuZ2V0KHsgaWQ6ICRzdGF0ZVBhcmFtc1snaWQnXSB9KTtcbiAgICAgICAgICAgICAgICB0aGlzLnRlYWNoZXJTdHJlYW0gPSBTdHJlYW1zU2VydmljZS5nZXRTdHJlYW0oJy9hcGkvdGVhY2hlci8nICsgJHN0YXRlUGFyYW1zWydpZCddKTtcbiAgICAgICAgICAgICAgICB0aGlzLnRlYWNoZXJTdHJlYW0uc3Vic2NyaWJlKChub3RpZmljYXRpb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50ZWFjaGVyID0gbm90aWZpY2F0aW9uLmRhdGE7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHRoaXMuZm9ybUZpZWxkcyA9IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIFwidGVtcGxhdGVPcHRpb25zXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwidHlwZVwiOiBcInRleHRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwibGFiZWxcIjogXCJGaXJzdCBOYW1lXCJcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJ0eXBlXCI6IFwiaW5wdXRcIixcbiAgICAgICAgICAgICAgICAgICAgXCJrZXlcIjogXCJmaXJzdE5hbWVcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBcInRlbXBsYXRlT3B0aW9uc1wiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcInR5cGVcIjogXCJ0ZXh0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImxhYmVsXCI6IFwiTGFzdCBOYW1lXCJcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJ0eXBlXCI6IFwiaW5wdXRcIixcbiAgICAgICAgICAgICAgICAgICAgXCJrZXlcIjogXCJsYXN0TmFtZVwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIHNhdmUoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy50ZWFjaGVyLmlkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5UZWFjaGVyU2VydmljZS51cGRhdGUodGhpcy50ZWFjaGVyKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5UZWFjaGVyU2VydmljZS5zYXZlKHtcbiAgICAgICAgICAgICAgICAgICAgXCJsYXN0TmFtZVwiOiB0aGlzLnRlYWNoZXIubGFzdE5hbWUsXG4gICAgICAgICAgICAgICAgICAgIFwiZmlyc3ROYW1lXCI6IHRoaXMudGVhY2hlci5maXJzdE5hbWVcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIGFuZ3VsYXIubW9kdWxlKCdhbmd1bGFyVGVzdC50ZWFjaGVyJylcbiAgICAgICAgLmNvbnRyb2xsZXIoJ1RlYWNoZXJFZGl0b3JDb250cm9sbGVyJywgVGVhY2hlckVkaXRvckNvbnRyb2xsZXIpO1xufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==